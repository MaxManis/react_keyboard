{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","callback","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,KACLC,SAAU,SAACC,GACT,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,QAJjC,uDAQE,WACEI,SAASC,iBAAiB,QAASC,KAAKP,MAAME,YATlD,kCAYE,WACEG,SAASG,oBAAoB,QAASD,KAAKP,MAAME,YAbrD,oBAgBE,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKP,MAAMC,IAAX,mCAC6BM,KAAKP,MAAMC,IADxC,KAGC,kCAvBZ,GAAyBS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.0de75632.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string | null,\n  callback: (event: KeyboardEvent) => void,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    key: null,\n    callback: (event: KeyboardEvent) => {\n      this.setState({ key: event.key });\n    },\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.state.callback);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.state.callback);\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.key ? (\n            `The last pressed key is [${this.state.key}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","// Imports:\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}